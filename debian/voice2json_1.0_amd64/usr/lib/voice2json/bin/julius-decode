#!/usr/bin/env bash

if [[ -z "${voice2json_dir}" ]]; then
    export voice2json_dir='/usr/lib/voice2json'
fi

# -----------------------------------------------------------------------------
# Command-line Arguments
# -----------------------------------------------------------------------------

. "${voice2json_dir}/etc/shflags"

# julius
DEFINE_string 'model-dir' '' 'Directory with Julius acoustic model'
DEFINE_string 'dictionary' '' 'Path to pronunciation dictionary'
DEFINE_string 'language-model' '' 'Path to (forward) ARPA language model'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# -----------------------------------------------------------------------------
# Default Settings
# -----------------------------------------------------------------------------

set -e

model_dir="${FLAGS_model_dir}"

if [[ -z "${model_dir}" ]]; then
    echo "Model directory is required"
    exit 1
fi

dictionary="${FLAGS_dictionary}"

if [[ -z "${dictionary}" ]]; then
    echo "Dictionary is required"
    exit 1
fi

language_model="${FLAGS_language_model}"

if [[ -z "${language_model}" ]]; then
    echo "Language model is required"
    exit 1
fi

lm_extension="${language_model##*.}"

# -----------------------------------------------------------------------------

# Create temporary directory and clean it up when script finishes
temp_dir="$(mktemp -d)"
function finish {
    rm -rf "${temp_dir}"
}

trap finish EXIT

# -----------------------------------------------------------------------------

args=()

if [[ "${lm_extension}" == 'txt' ]]; then
    # Assume forward ARPA language model
    args+=('-nlr' "${language_model}")
else
    # Assume binary language model
    args+=('-d' "${language_model}")
fi

julius \
    -quiet \
    -input file \
    -filelist /dev/stdin \
    -C "${model_dir}/julius.jconf" \
    -dnnconf "${model_dir}/dnn.jconf" \
    -v "${dictionary}" \
    "${args[@]}" | \
    grep 'sentence1:' | \
    sed -e 's/^[^>]\+>\s\+//' | \
    sed -e 's/\s\+<.\+$//'
