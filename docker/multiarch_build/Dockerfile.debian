ARG BUILD_FROM
FROM $BUILD_FROM

ARG MAKE_THREADS=8
ARG DEBIAN_ARCH
ARG CPU_ARCH

ENV LANG C.UTF-8

COPY docker/multiarch_build/bin/qemu-* /usr/bin/

RUN apt-get update && \
    apt-get install -y \
        build-essential \
        autoconf automake libtool \
        bison swig \
        libssl-dev libacl1-dev liblz4-dev libfuse-dev fuse pkg-config \
        fakeroot build-essential wget \
        zlib1g-dev libbz2-dev libncurses5-dev \
        libreadline-dev liblzma-dev libsqlite3-dev \
        curl

COPY download/ /

# openfst
RUN tar -xf /openfst-1.6.9.tar.gz && \
    cd /openfst-1.6.9 && \
    ./configure --enable-far --enable-static --enable-shared --enable-ngram-fsts && \
    make -j $MAKE_THREADS && \
    make install

# opengrm
COPY download/opengrm-ngram-1.3.4.tar.gz /
RUN  tar -xf /opengrm-ngram-1.3.4.tar.gz && \
     cd /opengrm-ngram-1.3.4 && \
     ./configure && \
     make -j $MAKE_THREADS && \
     make install


# phonetisaurus
COPY download/phonetisaurus-2019.tar.gz /
RUN tar -xf phonetisaurus-2019.tar.gz && \
    cd /phonetisaurus && \
    ./configure && \
    make -j $MAKE_THREADS && \
    make install

# -----------------------------------------------------------------------------

RUN cd / && \
    wget https://github.com/pyinstaller/pyinstaller/releases/download/v3.5/PyInstaller-3.5.tar.gz && \
    tar -xf /PyInstaller-3.5.tar.gz

RUN cd /PyInstaller-3.5/bootloader && \
    python3 ./waf all --no-lsb

RUN cd /PyInstaller-3.5 && \
    python3 -m pip install -e .

# -----------------------------------------------------------------------------

RUN ldconfig

COPY requirements.txt /root/
RUN pip3 install -r /root/requirements.txt

ENTRYPOINT ["bash"]