FROM python:3.7.7-stretch as base

ENV LANG C.UTF-8

RUN apt-get update && \
    apt-get install --yes --no-install-recommends \
        build-essential \
        python3 python3-dev python3-pip python3-setuptools python3-venv \
        swig portaudio19-dev libatlas-base-dev \
        fakeroot

# -----------------------------------------------------------------------------

FROM base as base-amd64

FROM base as base-armv7

FROM base as base-arm64

# -----------------------------------------------------------------------------

ARG TARGETARCH
ARG TARGETVARIANT
FROM base-$TARGETARCH$TARGETVARIANT

ENV APP_DIR=/usr/lib/voice2json
ENV BUILD_DIR=/build

COPY VERSION ${BUILD_DIR}/

# Write shared variables to /.vars
RUN export DEBIAN_ARCH="$(dpkg-architecture | grep DEB_BUILD_ARCH= | sed -e 's/[^=]\+=//')" && \
    export VERSION="$(cat ${BUILD_DIR}/VERSION)" && \
    export PACKAGE_NAME=voice2json_${VERSION}_${DEBIAN_ARCH} && \
    export DEBIAN_DIR=${BUILD_DIR}/${PACKAGE_NAME} && \
    echo "export PACKAGE_NAME=${PACKAGE_NAME}" > /.vars && \
    echo "export DEBIAN_ARCH=${DEBIAN_ARCH}" >> /.vars && \
    echo "export DEBIAN_DIR=${DEBIAN_DIR}" >> /.vars

RUN . /.vars && \
    mkdir -p ${DEBIAN_DIR}/DEBIAN

COPY debian/control.in /

RUN . /.vars && \
    sed -e s"/@VERSION@/${VERSION}/" -e "s/@DEBIAN_ARCH@/${DEBIAN_ARCH}/" < /control.in > ${DEBIAN_DIR}/DEBIAN/control

# Directory of prebuilt tools
COPY download/ ${BUILD_DIR}/download/

COPY m4/ ${BUILD_DIR}/m4/
COPY configure config.sub config.guess \
     install-sh missing aclocal.m4 \
     Makefile.in setup.py.in voice2json.sh.in voice2json.spec.in \
     ${BUILD_DIR}/

RUN cd ${BUILD_DIR} && \
    ./configure --prefix=${APP_DIR}

COPY scripts/install/ ${BUILD_DIR}/scripts/install/

COPY etc/profile.defaults.yml ${BUILD_DIR}/etc/
COPY etc/precise/ ${BUILD_DIR}/etc/precise/
COPY site/ ${BUILD_DIR}/site/

COPY README.md LICENSE ${BUILD_DIR}/
COPY voice2json/ ${BUILD_DIR}/voice2json/

RUN cd ${BUILD_DIR} && \
    make && \
    make install

RUN . ${APP_DIR}/bin/activate && \
    pip install pyinstaller

COPY __main__.py voice2json.spec ${BUILD_DIR}/
RUN . /.vars && \
    mkdir -p ${DEBIAN_DIR}${APP_DIR} && \
    cd ${BUILD_DIR} && \
    . ${APP_DIR}/bin/activate && \
    pyinstaller --noconfirm --distpath ${APP_DIR} voice2json.spec

RUN . /.vars && \
    mv ${APP_DIR}/* ${DEBIAN_DIR}${APP_DIR}/

# Strip binaries and shared libraries
RUN . /.vars && \
    (find ${DEBIAN_DIR}${APP_DIR} -type f \( -name '*.so*' -or -executable \) -print0 | xargs -0 strip --strip-unneeded -- 2>/dev/null) || true

COPY debian/voice2json debian/sox /tmp/
RUN . /.vars && \
    mkdir -p ${DEBIAN_DIR}/usr/bin && \
    mv /tmp/voice2json ${DEBIAN_DIR}/usr/bin/ && \
    mv /tmp/sox ${DEBIAN_DIR}${APP_DIR}/bin/

# Remove remnants of virtual environment
RUN . /.vars && \
    rm -rf \
        ${DEBIAN_DIR}${APP_DIR}/bin/pip* \
        ${DEBIAN_DIR}${APP_DIR}/bin/python* \
        ${DEBIAN_DIR}${APP_DIR}/lib/python*

RUN . /.vars && \
    cd ${BUILD_DIR} && \
    fakeroot dpkg --build ${PACKAGE_NAME}